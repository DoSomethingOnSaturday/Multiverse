//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Multiverse_Runtime_ApplicationControllerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Multiverse.Runtime.ApplicationController), typeof(Multiverse.Runtime.MonoSingleton<Multiverse.Runtime.ApplicationController>));
		L.RegFunction("Init", Init);
		L.RegFunction("LoginLoaded", LoginLoaded);
		L.RegFunction("LuaDoFile", LuaDoFile);
		L.RegFunction("LuaCall", LuaCall);
		L.RegFunction("LuaGetFunction", LuaGetFunction);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Multiverse.Runtime.ApplicationController obj = (Multiverse.Runtime.ApplicationController)ToLua.CheckObject<Multiverse.Runtime.ApplicationController>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoginLoaded(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Multiverse.Runtime.ApplicationController obj = (Multiverse.Runtime.ApplicationController)ToLua.CheckObject<Multiverse.Runtime.ApplicationController>(L, 1);
			UnityEngine.AssetBundle arg0 = (UnityEngine.AssetBundle)ToLua.CheckObject(L, 2, typeof(UnityEngine.AssetBundle));
			obj.LoginLoaded(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaDoFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Multiverse.Runtime.ApplicationController obj = (Multiverse.Runtime.ApplicationController)ToLua.CheckObject<Multiverse.Runtime.ApplicationController>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.LuaDoFile(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaCall(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			Multiverse.Runtime.ApplicationController obj = (Multiverse.Runtime.ApplicationController)ToLua.CheckObject<Multiverse.Runtime.ApplicationController>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			object[] arg2 = ToLua.ToParamsObject(L, 4, count - 3);
			object[] o = obj.LuaCall(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaGetFunction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Multiverse.Runtime.ApplicationController obj = (Multiverse.Runtime.ApplicationController)ToLua.CheckObject<Multiverse.Runtime.ApplicationController>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			LuaInterface.LuaFunction o = obj.LuaGetFunction(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

